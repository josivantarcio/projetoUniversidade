-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-06-28 09:48:10 BRT
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE aluno (
    id_aluno        NUMBER NOT NULL,
    curso_id_curso  NUMBER NOT NULL,
    turma_cod_turma NUMBER NOT NULL,
    nome_aluno      VARCHAR2(100 CHAR),
    sobrenome_aluno VARCHAR2(100 CHAR),
    cpf_aluno       VARCHAR2(14 CHAR),
    status_aluno    NUMBER,
    nomemae_aluno   VARCHAR2(50 CHAR),
    nomepai_aluno   VARCHAR2(50 CHAR),
    sexo_aluno      CHAR(1),
    email_aluno     VARCHAR2(50 CHAR),
    whatsapp_aluno  VARCHAR2(20 CHAR)
);

ALTER TABLE aluno ADD CONSTRAINT aluno_pk PRIMARY KEY ( id_aluno );

CREATE TABLE aluno_disciplina (
    aluno_id_aluno           NUMBER NOT NULL,
    disciplina_id_disciplina NUMBER NOT NULL
);

ALTER TABLE aluno_disciplina ADD CONSTRAINT aluno_disciplina_pk PRIMARY KEY ( aluno_id_aluno,
                                                                              disciplina_id_disciplina );

CREATE TABLE curso (
    id_curso               NUMBER NOT NULL,
    departamento_id_depart NUMBER NOT NULL,
    nome_curso             VARCHAR2(40 CHAR)
);

ALTER TABLE curso ADD CONSTRAINT curso_pk PRIMARY KEY ( id_curso );

CREATE TABLE curso_disciplina (
    curso_id_curso           NUMBER NOT NULL,
    disciplina_id_disciplina NUMBER NOT NULL
);

ALTER TABLE curso_disciplina ADD CONSTRAINT curso_disciplina_pk PRIMARY KEY ( curso_id_curso,
                                                                              disciplina_id_disciplina );

CREATE TABLE departamento (
    id_depart   NUMBER NOT NULL,
    nome_depart VARCHAR2(40 CHAR)
);

ALTER TABLE departamento ADD CONSTRAINT departamento_pk PRIMARY KEY ( id_depart );

CREATE TABLE disciplina (
    id_disciplina            NUMBER NOT NULL,
    departamento_id_depart   NUMBER NOT NULL,
    disciplina_id_disciplina NUMBER,
    nome_disciplina          VARCHAR2(50 CHAR),
    descricao_disciplina     VARCHAR2(200 CHAR),
    numaluno_disciplina      NUMBER,
    cargahoraria_disciplina  NUMBER
);

ALTER TABLE disciplina ADD CONSTRAINT disciplina_pk PRIMARY KEY ( id_disciplina );

CREATE TABLE disciplina_historico (
    historico_id_historico   NUMBER NOT NULL,
    disciplina_id_disciplina NUMBER NOT NULL,
    nota                     NUMBER(5, 2),
    frequencia               NUMBER
);

ALTER TABLE disciplina_historico ADD CONSTRAINT disciplina_historico_pk PRIMARY KEY ( historico_id_historico,
                                                                                      disciplina_id_disciplina );

CREATE TABLE end_prof (
    id_prof                       NUMBER NOT NULL,
    uf_cidade_id_uf_cidade        NUMBER NOT NULL,
    tipo_logradouro_id_tipo_logra NUMBER NOT NULL,
    end_logra                     VARCHAR2(80 CHAR),
    end_num                       VARCHAR2(10 CHAR),
    end_bairro                    VARCHAR2(30 CHAR),
    end_cep                       VARCHAR2(10 CHAR)
);

ALTER TABLE end_prof ADD CONSTRAINT end_prof_pk PRIMARY KEY ( id_prof );

CREATE TABLE endereco_aluno (
    id_end_aluno                  NUMBER NOT NULL,
    id_aluno                      NUMBER NOT NULL,
    tipo_logradouro_id_tipo_logra NUMBER NOT NULL,
    uf_cidade_id_uf_cidade        NUMBER NOT NULL,
    lagradouro                    VARCHAR2(80 CHAR),
    numero                        VARCHAR2(10 CHAR),
    bairro                        VARCHAR2(30 CHAR),
    complemento                   VARCHAR2(30 CHAR),
    cep                           VARCHAR2(9 CHAR)
);

ALTER TABLE endereco_aluno ADD CONSTRAINT endereco_aluno_pk PRIMARY KEY ( id_aluno,
                                                                          id_end_aluno );

CREATE TABLE historico (
    id_historico   NUMBER NOT NULL,
    aluno_id_aluno NUMBER NOT NULL,
    data_inicio    DATE,
    data_fim       DATE
);

CREATE UNIQUE INDEX historico__idx ON
    historico (
        aluno_id_aluno
    ASC );

ALTER TABLE historico ADD CONSTRAINT historico_pk PRIMARY KEY ( id_historico );

CREATE TABLE professor (
    id_prof                NUMBER NOT NULL,
    departamento_id_depart NUMBER NOT NULL,
    nome_prof              VARCHAR2(80 CHAR),
    sobrenome_prof         VARCHAR2(80 CHAR),
    cpf_prof               VARCHAR2(14 CHAR),
    status_prof            NUMBER
);

ALTER TABLE professor ADD CONSTRAINT professor_pk PRIMARY KEY ( id_prof );

CREATE TABLE professor_disciplina (
    professor_id_prof        NUMBER NOT NULL,
    disciplina_id_disciplina NUMBER NOT NULL
);

ALTER TABLE professor_disciplina ADD CONSTRAINT professor_disciplina_pk PRIMARY KEY ( professor_id_prof,
                                                                                      disciplina_id_disciplina );

CREATE TABLE telefone_aluno (
    id_tel_aluno                   NUMBER NOT NULL,
    id_aluno                       NUMBER NOT NULL,
    tipo_telefone_id_tipo_telefone NUMBER NOT NULL,
    numtelefone_aluno              VARCHAR2(14 CHAR)
);

ALTER TABLE telefone_aluno ADD CONSTRAINT telefone_aluno_pk PRIMARY KEY ( id_aluno,
                                                                          id_tel_aluno );

CREATE TABLE tipo_logradouro (
    id_tipo_logra NUMBER NOT NULL,
    tipo_logra    VARCHAR2(50 CHAR)
);

ALTER TABLE tipo_logradouro ADD CONSTRAINT tipo_logradouro_pk PRIMARY KEY ( id_tipo_logra );

CREATE TABLE tipo_telefone (
    id_tipo_fone  NUMBER NOT NULL,
    tipo_telefone VARCHAR2(40 CHAR)
);

ALTER TABLE tipo_telefone ADD CONSTRAINT tipo_telefone_pk PRIMARY KEY ( id_tipo_fone );

CREATE TABLE turma (
    cod_turma        NUMBER NOT NULL,
    curso_id_curso   NUMBER NOT NULL,
    periodo_turma    VARCHAR2(10 CHAR),
    numalunos_turma  NUMBER,
    datainicio_turma DATE,
    datafim_turma    DATE
);

CREATE UNIQUE INDEX turma__idx ON
    turma (
        curso_id_curso
    ASC );

ALTER TABLE turma ADD CONSTRAINT turma_pk PRIMARY KEY ( cod_turma );

CREATE TABLE uf_cidade (
    id_uf_cidade NUMBER NOT NULL,
    cidade       VARCHAR2(80 CHAR),
    estado       VARCHAR2(2 CHAR)
);

ALTER TABLE uf_cidade ADD CONSTRAINT uf_cidade_pk PRIMARY KEY ( id_uf_cidade );

ALTER TABLE aluno
    ADD CONSTRAINT aluno_curso_fk FOREIGN KEY ( curso_id_curso )
        REFERENCES curso ( id_curso );

ALTER TABLE aluno_disciplina
    ADD CONSTRAINT aluno_disciplina_aluno_fk FOREIGN KEY ( aluno_id_aluno )
        REFERENCES aluno ( id_aluno );

ALTER TABLE aluno_disciplina
    ADD CONSTRAINT aluno_disciplina_disciplina_fk FOREIGN KEY ( disciplina_id_disciplina )
        REFERENCES disciplina ( id_disciplina );

ALTER TABLE aluno
    ADD CONSTRAINT aluno_turma_fk FOREIGN KEY ( turma_cod_turma )
        REFERENCES turma ( cod_turma );

ALTER TABLE curso
    ADD CONSTRAINT curso_departamento_fk FOREIGN KEY ( departamento_id_depart )
        REFERENCES departamento ( id_depart );

ALTER TABLE curso_disciplina
    ADD CONSTRAINT curso_disciplina_curso_fk FOREIGN KEY ( curso_id_curso )
        REFERENCES curso ( id_curso );

ALTER TABLE curso_disciplina
    ADD CONSTRAINT curso_disciplina_disciplina_fk FOREIGN KEY ( disciplina_id_disciplina )
        REFERENCES disciplina ( id_disciplina );

ALTER TABLE disciplina_historico
    ADD CONSTRAINT disc_hist_disc_fk FOREIGN KEY ( disciplina_id_disciplina )
        REFERENCES disciplina ( id_disciplina );

ALTER TABLE disciplina_historico
    ADD CONSTRAINT disc_hist_hist_fk FOREIGN KEY ( historico_id_historico )
        REFERENCES historico ( id_historico );

ALTER TABLE disciplina
    ADD CONSTRAINT disciplina_departamento_fk FOREIGN KEY ( departamento_id_depart )
        REFERENCES departamento ( id_depart );

ALTER TABLE disciplina
    ADD CONSTRAINT disciplina_disciplina_fk FOREIGN KEY ( disciplina_id_disciplina )
        REFERENCES disciplina ( id_disciplina );

ALTER TABLE endereco_aluno
    ADD CONSTRAINT end_alu_alu_fk FOREIGN KEY ( id_aluno )
        REFERENCES aluno ( id_aluno );

ALTER TABLE endereco_aluno
    ADD CONSTRAINT end_alu_tp_logra_fk FOREIGN KEY ( tipo_logradouro_id_tipo_logra )
        REFERENCES tipo_logradouro ( id_tipo_logra )
            ON DELETE CASCADE;

ALTER TABLE endereco_aluno
    ADD CONSTRAINT end_alu_uf_cid_fk FOREIGN KEY ( uf_cidade_id_uf_cidade )
        REFERENCES uf_cidade ( id_uf_cidade );

ALTER TABLE end_prof
    ADD CONSTRAINT end_prof_professor_fk FOREIGN KEY ( id_prof )
        REFERENCES professor ( id_prof );

ALTER TABLE end_prof
    ADD CONSTRAINT end_prof_tipo_logradouro_fk FOREIGN KEY ( tipo_logradouro_id_tipo_logra )
        REFERENCES tipo_logradouro ( id_tipo_logra )
            ON DELETE CASCADE;

ALTER TABLE end_prof
    ADD CONSTRAINT end_prof_uf_cidade_fk FOREIGN KEY ( uf_cidade_id_uf_cidade )
        REFERENCES uf_cidade ( id_uf_cidade );

ALTER TABLE historico
    ADD CONSTRAINT historico_aluno_fk FOREIGN KEY ( aluno_id_aluno )
        REFERENCES aluno ( id_aluno );

ALTER TABLE professor_disciplina
    ADD CONSTRAINT prof_disc_disc_fk FOREIGN KEY ( disciplina_id_disciplina )
        REFERENCES disciplina ( id_disciplina );

ALTER TABLE professor_disciplina
    ADD CONSTRAINT prof_disc_prof_fk FOREIGN KEY ( professor_id_prof )
        REFERENCES professor ( id_prof );

ALTER TABLE professor
    ADD CONSTRAINT professor_departamento_fk FOREIGN KEY ( departamento_id_depart )
        REFERENCES departamento ( id_depart );

ALTER TABLE telefone_aluno
    ADD CONSTRAINT telef_aluno_tp_fone_fk FOREIGN KEY ( tipo_telefone_id_tipo_telefone )
        REFERENCES tipo_telefone ( id_tipo_fone )
            ON DELETE CASCADE;

ALTER TABLE telefone_aluno
    ADD CONSTRAINT telefone_aluno_aluno_fk FOREIGN KEY ( id_aluno )
        REFERENCES aluno ( id_aluno );

ALTER TABLE turma
    ADD CONSTRAINT turma_curso_fk FOREIGN KEY ( curso_id_curso )
        REFERENCES curso ( id_curso );

CREATE SEQUENCE aluno_id_aluno_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER aluno_id_aluno_trg BEFORE
    INSERT ON aluno
    FOR EACH ROW
    WHEN ( new.id_aluno IS NULL )
BEGIN
    :new.id_aluno := aluno_id_aluno_seq.nextval;
END;
/

CREATE SEQUENCE curso_id_curso_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER curso_id_curso_trg BEFORE
    INSERT ON curso
    FOR EACH ROW
    WHEN ( new.id_curso IS NULL )
BEGIN
    :new.id_curso := curso_id_curso_seq.nextval;
END;
/

CREATE SEQUENCE departamento_id_depart_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER departamento_id_depart_trg BEFORE
    INSERT ON departamento
    FOR EACH ROW
    WHEN ( new.id_depart IS NULL )
BEGIN
    :new.id_depart := departamento_id_depart_seq.nextval;
END;
/

CREATE SEQUENCE disciplina_id_disciplina_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER disciplina_id_disciplina_trg BEFORE
    INSERT ON disciplina
    FOR EACH ROW
    WHEN ( new.id_disciplina IS NULL )
BEGIN
    :new.id_disciplina := disciplina_id_disciplina_seq.nextval;
END;
/

CREATE SEQUENCE end_prof_id_prof_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER end_prof_id_prof_trg BEFORE
    INSERT ON end_prof
    FOR EACH ROW
    WHEN ( new.id_prof IS NULL )
BEGIN
    :new.id_prof := end_prof_id_prof_seq.nextval;
END;
/

CREATE SEQUENCE endereco_aluno_id_end_aluno START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER endereco_aluno_id_end_aluno BEFORE
    INSERT ON endereco_aluno
    FOR EACH ROW
    WHEN ( new.id_end_aluno IS NULL )
BEGIN
    :new.id_end_aluno := endereco_aluno_id_end_aluno.nextval;
END;
/

CREATE SEQUENCE historico_id_historico_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER historico_id_historico_trg BEFORE
    INSERT ON historico
    FOR EACH ROW
    WHEN ( new.id_historico IS NULL )
BEGIN
    :new.id_historico := historico_id_historico_seq.nextval;
END;
/

CREATE SEQUENCE professor_id_prof_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER professor_id_prof_trg BEFORE
    INSERT ON professor
    FOR EACH ROW
    WHEN ( new.id_prof IS NULL )
BEGIN
    :new.id_prof := professor_id_prof_seq.nextval;
END;
/

CREATE SEQUENCE telefone_aluno_id_tel_aluno START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER telefone_aluno_id_tel_aluno BEFORE
    INSERT ON telefone_aluno
    FOR EACH ROW
    WHEN ( new.id_tel_aluno IS NULL )
BEGIN
    :new.id_tel_aluno := telefone_aluno_id_tel_aluno.nextval;
END;
/

CREATE SEQUENCE tipo_logradouro_id_tipo_logra START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tipo_logradouro_id_tipo_logra BEFORE
    INSERT ON tipo_logradouro
    FOR EACH ROW
    WHEN ( new.id_tipo_logra IS NULL )
BEGIN
    :new.id_tipo_logra := tipo_logradouro_id_tipo_logra.nextval;
END;
/

CREATE SEQUENCE tipo_telefone_id_tipo_fone_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tipo_telefone_id_tipo_fone_trg BEFORE
    INSERT ON tipo_telefone
    FOR EACH ROW
    WHEN ( new.id_tipo_fone IS NULL )
BEGIN
    :new.id_tipo_fone := tipo_telefone_id_tipo_fone_seq.nextval;
END;
/

CREATE SEQUENCE turma_cod_turma_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER turma_cod_turma_trg BEFORE
    INSERT ON turma
    FOR EACH ROW
    WHEN ( new.cod_turma IS NULL )
BEGIN
    :new.cod_turma := turma_cod_turma_seq.nextval;
END;
/

CREATE SEQUENCE uf_cidade_id_uf_cidade_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER uf_cidade_id_uf_cidade_trg BEFORE
    INSERT ON uf_cidade
    FOR EACH ROW
    WHEN ( new.id_uf_cidade IS NULL )
BEGIN
    :new.id_uf_cidade := uf_cidade_id_uf_cidade_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            17
-- CREATE INDEX                             2
-- ALTER TABLE                             41
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          13
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         13
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
